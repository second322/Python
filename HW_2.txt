Python_2 HW_2

Arithmetic

 1. Создать переменную item_1 типа integer.
 item_1 = 3

 2. Создать переменную item_2 типа integer.
 item_2 = 4

 3. Создать переменную result_sum в которой вы суммируете item_1 и item_2.
 result_sum = item_1 + item_2

 4. Вывести result_sum в консоль.
 print(result_sum)

 5. Создать переменную result_subtr в которой вы вычитаете большую по значению переменную из меньшей по значению.
 см. 6 пункт

 6. Вывести result_subtr в консоль.
 if (item_2 - item_1) >= 0:
    result_subtr = item_2 - item_1
    print(result_subtr)
 else:
    print(item_1 - item_2)

 7. Создать переменную result_multi в которой вы умножаете item_1 на item_2.
 result_multi = item_1 * item_2

 8. Вывести result_multi в консоль.
 print(result_multi)

 9. Создать переменную result_exp в которой вы item_1 возводите в степень item_2.
 result_exp = item_1 ** item_2

 10. Вывести result_exp в консоль.
 print(result_exp)

 11. Создать переменную result_m_exp в которой вы item_1 возводите в степень item_2 используя библиотеку math.
 result_m_exp = math.pow(item_1, item_2)

 12. Вывести result_m_exp в консоль.
 print(result_m_exp)

 13. Создать переменную result_s_root в которой вы найдёте квадратный корень любой из переменной item.
 result_s_root = math.sqrt(item_1)

 14. Вывести result_s_root в консоль.
 print(result_s_root)

 15. Создать переменную result_m_s_root в которой вы найдёте квадратный корень любой из переменной item используя библиотеку math.
 result_m_s_root = math.sqrt(item_1)

 16. Вывести result_m_s_root в консоль.
 print(result_m_s_root)

 17. Создать переменную result_mp_s_root в которой вы найдёте квадратный корень любой из переменной item используя библиотеку math используя метод pow.
 result_mp_s_root = math.pow(item_1, 0.5)

 18. Вывести result_mp_s_root в консоль.
 print(result_mp_s_root)

 19. Присвоить переменной item_1 odd значение
 item_1 = 3
 
 20. Присвоить переменной item_2 even значение
 item_2 = 4
 
 21. Создать переменную result_division в которой вы разделите item_1 на item_2.
 result_division = item_1 / item_2
 
 22. Вывести result_division в консоль.
 print(result_division)
 
 23. Создать переменную result_m_floor и result_division округлить до ближайшего целого меньшего чем result_division.
 result_m_floor = 5.105
 print('result_m_floor=', result_m_floor)
 result_division = 4
 print('math.floor(result_m_floor)=', math.floor(result_m_floor))
 while (result_m_floor > result_division):
    result_m_floor = result_m_floor-1

    result_m_floor = math.floor(result_m_floor)

 24. Вывести result_m_floor в консоль.
 print(result_m_floor)

 25. Создать переменную result_m_ceil и result_division округлить до ближайшего целого большего чем result_division.
 while (result_m_ceil < result_division):
    result_m_ceil = result_m_ceil + 1

    result_m_ceil = math.ceil(result_m_ceil)
    
 26. Вывести result_m_ceil в консоль.
 print(result_m_ceil)

 27. Создать переменную result_int и result_division округлить до ближайшего целого через явное приведение.
 result_int = 7.785

result_division = 11

if (result_int > result_division):
    while (result_int > result_division):
        result_int = result_int - 1
else:
        while (result_int < result_division):
            result_int = result_int + 1


 28. Вывести result_int в консоль.
 print(int(result_int))
 29. Создать переменную result_no_division_loss в которой вы разделите item_1 на item_2 без остатка.
 result_no_division_loss = item_1//item_2

 30. Вывести result_no_division_loss в консоль.
 print(result_no_division_loss)
